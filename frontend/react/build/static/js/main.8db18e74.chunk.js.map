{"version":3,"sources":["components/SourceStats.js","components/Stats.js","components/PermitsFilter.js","components/PermitDataTable.js","components/PermitNote.js","components/PermitButtons.js","components/PermitRow.js","components/CurlModal.js","components/Permits.js","App.js","reportWebVitals.js","index.js"],"names":["TOTAL_QUERY","gql","CLASSIFICATION_QUERY","SourceStats","props","sourceId","source","id","total","useQuery","variables","unclassified","classification","construction","not_construction","possible_construction","duplicate","loading","error","state","labels","datasets","label","backgroundColor","hoverBackgroundColor","data","permits","totalCount","className","name","SOURCES_QUERY","Stats","sources","nodes","map","n","src","PermitsFilter","useState","street","setStreet","city","setCity","setState","zip","setZip","minCost","setMinCost","minSqft","setMinSqft","setClassification","order","setOrder","setFilter","e","c","preventDefault","undefined","equalTo","setFilterVars","min_sqft","Number","min_cost","useEffect","onSubmit","htmlFor","value","onChange","target","type","placeholder","style","marginTop","marginLeft","onClick","document","getElementById","display","classList","add","title","getJsonFile","PermitDataTable","border","permit","permitData","Object","entries","json_data","JSON","parse","forEach","x","CleanPermitData","key","Fragment","PermitNote","UPDATE_NOTE","notes","note","setNote","useMutation","updateNote","console","log","width","rows","CLASSIFY_PERMIT_MUT","colors","PermitButtons","classifyPermit","classify","a","PermitRow","UNCLASSIFIED","CONSTRUCTION","NOT_CONSTRUCTION","POSSIBLE_CONSTRUCTION","DUPLICATE","HIGHLIGHT","image_dir","mp4_filename","address","streetNumber","autoPlay","loop","muted","controls","fontSize","cost","sqft","location","y","href","CurlModal","closeModal","remove","modal","window","onclick","event","tabIndex","query","PERMITS_QUERY","Permits","filterVars","useLazyQuery","getPermits","queryResponseJSON","stringify","d","Blob","url","URL","createObjectURL","print","minHeight","position","edges","p","node","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.8db18e74.chunk.js","sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst TOTAL_QUERY = gql`\n  query TotalPermits($sourceId: Int) {\n    permits(condition: { sourceId: $sourceId }) {\n      totalCount\n    }\n  }\n`;\n\nconst CLASSIFICATION_QUERY = gql`\n  query TotalPermits($sourceId: Int, $classification: Classification) {\n    permits(\n      condition: { sourceId: $sourceId, classification: $classification }\n    ) {\n      totalCount\n    }\n  }\n`;\n\nfunction SourceStats(props) {\n  const sourceId = props.source.id;\n  const total = useQuery(TOTAL_QUERY, {\n    variables: { sourceId },\n  });\n  const unclassified = useQuery(CLASSIFICATION_QUERY, {\n    variables: { sourceId: sourceId, classification: \"UNCLASSIFIED\" },\n  });\n  const construction = useQuery(CLASSIFICATION_QUERY, {\n    variables: { sourceId: sourceId, classification: \"CONSTRUCTION\" },\n  });\n  const not_construction = useQuery(CLASSIFICATION_QUERY, {\n    variables: { sourceId: sourceId, classification: \"NOT_CONSTRUCTION\" },\n  });\n  const possible_construction = useQuery(CLASSIFICATION_QUERY, {\n    variables: { sourceId: sourceId, classification: \"POSSIBLE_CONSTRUCTION\" },\n  });\n  const duplicate = useQuery(CLASSIFICATION_QUERY, {\n    variables: { sourceId: sourceId, classification: \"DUPLICATE\" },\n  });\n\n  if (\n    total.loading ||\n    unclassified.loading ||\n    construction.loading ||\n    not_construction.loading ||\n    possible_construction.loading ||\n    duplicate.loading\n  )\n    return <p>Loading...</p>;\n  if (total.error) return <p>Error with Total</p>;\n  if (unclassified.error) return <p>Error with unclassified</p>;\n  if (construction.error) return <p>Error with consruction</p>;\n  if (not_construction.error) return <p>Error with not consruction</p>;\n  if (possible_construction.error)\n    return <p>Error with possible consruction</p>;\n  if (duplicate.error) return <p>Error with duplicate</p>;\n\n  const state = {\n    labels: [\n      \"Unclassified\",\n      \"Construction\",\n      \"Not Construction\",\n      \"Possible Construction\",\n      \"Duplicate\",\n    ],\n    datasets: [\n      {\n        label: \"Rainfall\",\n        backgroundColor: [\n          \"#B21F00\",\n          \"#C9DE00\",\n          \"#2FDE00\",\n          \"#00A6B4\",\n          \"#6800B4\",\n        ],\n        hoverBackgroundColor: [\n          \"#501800\",\n          \"#4B5000\",\n          \"#175000\",\n          \"#003350\",\n          \"#35014F\",\n        ],\n        data: [\n          unclassified.data.permits.totalCount,\n          construction.data.permits.totalCount,\n          not_construction.data.permits.totalCount,\n          possible_construction.data.permits.totalCount,\n          duplicate.data.permits.totalCount,\n        ],\n      },\n    ],\n  };\n\n  return (\n    <>\n      <div className=\"statBox\">\n        <h2 className=\"text-center\">{props.source.name}</h2>\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <p>Permits: {total.data.permits.totalCount}</p>\n            <p>Unclassified: {unclassified.data.permits.totalCount}</p>\n            <p>Construction: {construction.data.permits.totalCount}</p>\n            <p>Not Construction: {not_construction.data.permits.totalCount}</p>\n            <p>\n              Possible Construction:{\" \"}\n              {possible_construction.data.permits.totalCount}\n            </p>\n            <p>Duplicate: {duplicate.data.permits.totalCount}</p>\n          </div>\n          <div className=\"col-8\">\n            <Pie className=\"chart\" data={state} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SourceStats;\n","import { useQuery, gql } from \"@apollo/client\";\nimport SourceStats from \"./SourceStats.js\";\nconst SOURCES_QUERY = gql`\n  query GetAllSources {\n    sources {\n      nodes {\n        description\n        id\n        name\n      }\n    }\n  }\n`;\n\nfunction Stats() {\n  const { loading, error, data } = useQuery(SOURCES_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <>\n      <h1 className=\"text-center\">Source Statistics</h1>\n      <div className=\"row\">\n        {data.sources.nodes.map((n) => (\n          <div className=\"col-md-4\">\n            <SourceStats source={n} />\n          </div>\n        ))}\n      </div>\n      <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    </>\n  );\n}\n\nexport default Stats;\n","import { useQuery, gql } from \"@apollo/client\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction PermitsFilter(props) {\n  const [street, setStreet] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [minCost, setMinCost] = useState(\"\");\n  const [minSqft, setMinSqft] = useState(\"\");\n  const [classification, setClassification] = useState(\"ALL\");\n  const [order, setOrder] = useState(\"SQFT_DESC\");\n\n  useEffect(() => {\n    setFilter();\n  }, [classification, order]);\n\n  function setFilter(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    var c;\n    if (classification === \"ALL\") {\n      c = undefined;\n    } else {\n      c = { equalTo: classification };\n    }\n\n    props.setFilterVars({\n      order: order,\n      classification: c,\n      min_sqft: Number(minSqft),\n      min_cost: Number(minCost),\n      street: street,\n      city: city,\n      state: state,\n      zip: zip,\n    });\n  }\n\n  function openModal() {\n    document.getElementById(\"backdrop\").style.display = \"block\";\n    document.getElementById(\"curlModal\").style.display = \"block\";\n    document.getElementById(\"curlModal\").classList.add(\"show\");\n  }\n\n  return (\n    <>\n      <h5>Filter By:</h5>\n      <div className=\"container-fluid\">\n        <form onSubmit={setFilter}>\n          <div className=\"row\">\n            <div className=\"col-lg-8\">\n              <div className=\"form-row\">\n                <div className=\"form-col\">\n                  <label className=\"my-1 mr-2\" htmlFor=\"streetFilter\">\n                    Street:\n                  </label>\n                  <input\n                    value={street}\n                    onChange={(e) => setStreet(e.target.value)}\n                    type=\"text\"\n                    className=\"my-1 mr-2 form-control\"\n                    id=\"streetFilter\"\n                  ></input>\n                </div>\n                <div className=\"form-col\">\n                  <label className=\"my-1 mr-2\" htmlFor=\"cityFilter\">\n                    City:\n                  </label>\n                  <input\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    type=\"text\"\n                    className=\"form-control my-1 mr-2\"\n                    id=\"cityFilter\"\n                  ></input>\n                </div>\n                <div className=\"form-col\">\n                  <label className=\"my-1 mr-2\" htmlFor=\"stateFilter\">\n                    State:\n                  </label>\n                  <input\n                    value={state}\n                    onChange={(e) => setState(e.target.value)}\n                    type=\"text\"\n                    className=\"form-control my-1 mr-2\"\n                    id=\"stateFilter\"\n                  ></input>\n                </div>\n                <div className=\"form-col\">\n                  <label className=\"my-1 mr-2\" htmlFor=\"zipFilter\">\n                    Zip:\n                  </label>\n                  <input\n                    value={zip}\n                    onChange={(e) => setZip(e.target.value)}\n                    type=\"text\"\n                    className=\"form-control my-1 mr-2\"\n                    id=\"zipFilter\"\n                  ></input>\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-col\">\n                  <label className=\"my-1 mr-2\" htmlFor=\"classification_filter\">\n                    Classification:\n                  </label>\n                  <select\n                    className=\"custom-select my-1 mr-sm-2\"\n                    id=\"classification_filter\"\n                    value={classification}\n                    onChange={(e) => {\n                      setClassification(e.target.value);\n                    }}\n                  >\n                    <option value=\"ALL\">All</option>\n                    <option value=\"UNCLASSIFIED\">Unclassified</option>\n                    <option value=\"CONSTRUCTION\">Construction</option>\n                    <option value=\"NOT_CONSTRUCTION\">Not Construction</option>\n                    <option value=\"POSSIBLE_CONSTRUCTION\">\n                      Maybe Construction\n                    </option>\n                    <option value=\"DUPLICATE\">Duplicate</option>\n                  </select>\n                </div>\n                <div className=\"form-col\">\n                  <label className=\"my-1 mr-2\" htmlFor=\"minCostFilter\">\n                    Min Cost:\n                  </label>\n                  <input\n                    value={minCost}\n                    onChange={(e) => setMinCost(e.target.value)}\n                    type=\"number\"\n                    className=\"form-control my-1 mr-2\"\n                    id=\"minCostFilter\"\n                    placeholder=\"$0\"\n                  ></input>\n                </div>\n                <div className=\"form-col\">\n                  <label className=\"my-1 mr-2\" htmlFor=\"minSqftFilter\">\n                    Min Square Footage:\n                  </label>\n                  <input\n                    value={minSqft}\n                    onChange={(e) => setMinSqft(e.target.value)}\n                    type=\"number\"\n                    className=\"form-control my-1 mr-2\"\n                    id=\"minSqftFilter\"\n                    placeholder=\"0\"\n                  ></input>\n                </div>\n                <div className=\"form-col\">\n                  <div style={{ marginTop: \"35px\", marginLeft: \"10px\" }}>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-primary mb-2\"\n                      value=\"Apply\"\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-link\"\n                      onClick={openModal}\n                      data-toggle=\"tooltip\"\n                      data-placement=\"top\"\n                      title=\"view cURL instructions\"\n                    >\n                      <h4>\n                        <i className=\"bi bi-info-circle\"></i>\n                      </h4>\n                    </button>\n                    <button\n                      onClick={props.getJsonFile}\n                      className=\"btn btn-link\"\n                      data-toggle=\"tooltip\"\n                      data-placement=\"top\"\n                      title=\"view raw JSON\"\n                    >\n                      <h4>\n                        <i className=\"bi bi-file-earmark-code\"></i>\n                      </h4>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-auto\"></div>\n            <div className=\"col-lg-3\">\n              <h5>Order By:</h5>\n              <select\n                value={order}\n                onChange={(e) => setOrder(e.target.value)}\n                className=\"custom-select my-1 mr-sm-2\"\n                id=\"selectOrder\"\n\n                // onChange={setFilter}\n              >\n                {/* <!-- <option selected value=\"NATURAL\">ID</option> --> */}\n                <option value=\"SQFT_DESC\">Size</option>\n                <option value=\"COST_DESC\">Cost</option>\n                {/* <!-- <option value=\"STREET_ASC\">Street Name </option> --> */}\n              </select>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default PermitsFilter;\n","import React from \"react\";\n\nfunction PermitDataTable(props) {\n  function CleanPermitData(json_data) {\n    var data = JSON.parse(json_data);\n    let unneeded = [\n      \"Accuracy Score\",\n      \"Accuracy Type\",\n      \"Bldg Sqft\",\n      \"City\",\n      \"County\",\n      \"Country\",\n      \"Estimated Construction Cost\",\n      \"Latitude\",\n      \"Longitude\",\n      \"Number\",\n      \"Site Location\",\n      \"Source\",\n      \"State\",\n      \"Street\",\n      \"Unit Type\",\n      \"Unit Number\",\n      \"Zip\",\n    ];\n    unneeded.forEach((x) => {\n      delete data[x];\n    });\n    return data;\n  }\n\n  return (\n    <table\n      className=\"col-lg-3 col-md-auto permitDataTable\"\n      style={{ border: props.border, backgroundColor: props.backgroundColor }}\n    >\n      <tbody>\n        <tr>\n          <td>\n            <h5>Permit Data</h5>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            {props.permit.permitData &&\n              Object.entries(CleanPermitData(props.permit.permitData)).map(\n                ([key, value]) => (\n                  <React.Fragment key={key}>\n                    <b>{key}:</b> {value}\n                    <br />\n                  </React.Fragment>\n                )\n              )}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\nexport default PermitDataTable;\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation, gql, ApolloProvider } from \"@apollo/client\";\n\nfunction PermitNote(props) {\n  const UPDATE_NOTE = gql`\n    mutation UpdateNotes($note: String, $id: Int!) {\n      updatePermit(input: { patch: { notes: $note }, id: $id }) {\n        clientMutationId\n        permit {\n          notes\n        }\n      }\n    }\n  `;\n  const [note, setNote] = useState(props.permit.notes || \"\");\n  const [updateNote, { data, loading, error }] = useMutation(UPDATE_NOTE);\n  useEffect(() => {\n    updateNote({\n      variables: {\n        note: note,\n        id: props.permit.id,\n      },\n    });\n  }, [note]);\n\n  if (error) console.log(error);\n  // if (data) console.log(data);\n\n  return (\n    <div className=\"form-group\">\n      <textarea\n        className=\"form-control\"\n        style={{ width: \"100%\" }}\n        id={\"notes-\" + props.permit.id}\n        rows=\"2\"\n        placeholder=\"Enter a note\"\n        value={note}\n        onChange={(e) => setNote(e.target.value)}\n      ></textarea>\n    </div>\n  );\n}\n\nexport default PermitNote;\n","import React from \"react\";\nimport { useMutation, gql, ApolloProvider } from \"@apollo/client\";\n\nconst CLASSIFY_PERMIT_MUT = gql`\n  mutation classifyPermit($id: Int!, $classification: Classification) {\n    updatePermit(\n      input: { patch: { classification: $classification }, id: $id }\n    ) {\n      clientMutationId\n      permit {\n        id\n        classification\n      }\n    }\n  }\n`;\n\nconst colors = {\n  UNCLASSIFIED: {\n    border: \"8px solid #EEE\",\n    backgroundColor: \"#FFFFFF\",\n  },\n  CONSTRUCTION: {\n    border: \"8px solid #00CC00\",\n    backgroundColor: \"#CCFFCC\",\n  },\n  NOT_CONSTRUCTION: {\n    border: \"8px solid #FF0000\",\n    backgroundColor: \"#FFCCCC\",\n  },\n  POSSIBLE_CONSTRUCTION: {\n    border: \"8px solid #DDDD00\",\n    backgroundColor: \"#FFFF99\",\n  },\n  DUPLICATE: {\n    border: \"8px solid #FF0000\",\n    backgroundColor: \"#FFCCCC\",\n  },\n  HIGHLIGHT: {\n    border: \"8px solid #999\",\n    backgroundColor: \"#EEEEEE\",\n  },\n};\nfunction PermitButtons(props) {\n  const [classifyPermit, { data, loading, error }] =\n    useMutation(CLASSIFY_PERMIT_MUT);\n\n  async function classify(classification) {\n    classifyPermit({\n      variables: {\n        id: props.permit.id,\n        classification: classification,\n      },\n    });\n  }\n\n  function setYes(id) {\n    document.getElementById(id).style.border = colors.CONSTRUCTION.border;\n    document.getElementById(id).style.backgroundColor =\n      colors.CONSTRUCTION.backgroundColor;\n    classify(\"CONSTRUCTION\");\n  }\n\n  function setNo(id) {\n    document.getElementById(id).style.border = colors.NOT_CONSTRUCTION.border;\n    document.getElementById(id).style.backgroundColor =\n      colors.NOT_CONSTRUCTION.backgroundColor;\n    classify(\"NOT_CONSTRUCTION\");\n  }\n\n  function setMaybe(id) {\n    document.getElementById(id).style.border =\n      colors.POSSIBLE_CONSTRUCTION.border;\n    document.getElementById(id).style.backgroundColor =\n      colors.POSSIBLE_CONSTRUCTION.backgroundColor;\n    classify(\"POSSIBLE_CONSTRUCTION\");\n  }\n\n  function setDuplicate(id) {\n    document.getElementById(id).style.border = colors.DUPLICATE.border;\n    document.getElementById(id).style.backgroundColor =\n      colors.DUPLICATE.backgroundColor;\n    classify(\"DUPLICATE\");\n  }\n\n  function setUnclassified(id) {\n    document.getElementById(id).style.border = colors.UNCLASSIFIED.border;\n    document.getElementById(id).style.backgroundColor =\n      colors.UNCLASSIFIED.backgroundColor;\n    classify(\"UNCLASSIFIED\");\n  }\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => {\n          setNo(props.permit.id);\n        }}\n      >\n        <u>N</u>o\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => {\n          setYes(props.permit.id);\n        }}\n      >\n        <u>Y</u>es\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => {\n          setMaybe(props.permit.id);\n        }}\n      >\n        Maybe\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => {\n          setDuplicate(props.permit.id);\n        }}\n      >\n        Duplicate\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        onClick={() => {\n          setUnclassified(props.permit.id);\n        }}\n      >\n        Reset\n      </button>\n    </>\n  );\n}\nexport default PermitButtons;\n","import React from \"react\";\nimport PermitDataTable from \"./PermitDataTable\";\nimport PermitNote from \"./PermitNote.js\";\nimport PermitButtons from \"./PermitButtons.js\";\n\nfunction PermitRow(props) {\n  const colors = {\n    UNCLASSIFIED: {\n      border: \"8px solid #EEE\",\n      backgroundColor: \"#FFFFFF\",\n    },\n    CONSTRUCTION: {\n      border: \"8px solid #00CC00\",\n      backgroundColor: \"#CCFFCC\",\n    },\n    NOT_CONSTRUCTION: {\n      border: \"8px solid #FF0000\",\n      backgroundColor: \"#FFCCCC\",\n    },\n    POSSIBLE_CONSTRUCTION: {\n      border: \"8px solid #DDDD00\",\n      backgroundColor: \"#FFFF99\",\n    },\n    DUPLICATE: {\n      border: \"8px solid #FF0000\",\n      backgroundColor: \"#FFCCCC\",\n    },\n    HIGHLIGHT: {\n      border: \"8px solid #999\",\n      backgroundColor: \"#EEEEEE\",\n    },\n  };\n\n  const image_dir = \"/data/\";\n  const mp4_filename = image_dir + props.permit.id + \".mp4\";\n  const border = colors[props.permit.classification].border;\n  const backgroundColor = colors[props.permit.classification].backgroundColor;\n  const address =\n    props.permit.streetNumber +\n    \" \" +\n    props.permit.street +\n    \", \" +\n    props.permit.city +\n    \", \" +\n    props.permit.state +\n    \" \" +\n    props.permit.zip;\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"row align-items-center\">\n          <table\n            className=\"col-lg-8 col-md-auto\"\n            style={{ border: border, backgroundColor: backgroundColor }}\n            id={props.permit.id}\n          >\n            <tbody>\n              <tr>\n                <td>\n                  <video autoPlay loop muted controls>\n                    <source src={mp4_filename} type=\"video/mp4\" />\n                    Your browser does not support the video tag.\n                  </video>\n                </td>\n                <td style={{ width: \"500px\" }}>\n                  <b style={{ fontSize: \"23px\" }}>{address}</b>\n                  <br />\n                  Cost: <b>{props.permit.cost}</b>\n                  Sqft: <b>{props.permit.sqft}</b>\n                  <br />({props.permit.location.x}, {props.permit.location.y})\n                  <br />\n                  id: {props.permit.id}\n                  <p />\n                  <p />\n                  Construction?\n                  <p />\n                  <PermitButtons permit={props.permit} />\n                  <p />\n                  <PermitNote permit={props.permit} />\n                </td>\n                <td>\n                  {[\"2016\", \"2017\", \"2018\", \"2019\", \"2020\", \"2021\"].map((y) => (\n                    <React.Fragment key={y}>\n                      <a\n                        href={\n                          image_dir + props.permit.id + \" \" + y + \"-07-01.kml\"\n                        }\n                      >\n                        {y}\n                      </a>\n                      <br />\n                    </React.Fragment>\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <PermitDataTable\n            permit={props.permit}\n            border={border}\n            backgroundColor={backgroundColor}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default PermitRow;\n","function CurlModal(props) {\n  function closeModal() {\n    document.getElementById(\"backdrop\").style.display = \"none\";\n    document.getElementById(\"curlModal\").style.display = \"none\";\n    document.getElementById(\"curlModal\").classList.remove(\"show\");\n  }\n\n  var modal = document.getElementById(\"curlModal\");\n  window.onclick = function (event) {\n    if (event.target == modal) {\n      closeModal();\n    }\n  };\n  return (\n    <>\n      <div className=\"modal fade\" id=\"curlModal\" tabIndex=\"-1\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"curlModalLabel\">\n                Using cURL\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                aria-label=\"Close\"\n                onClick={closeModal}\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <code>\n                curl -g --user admin:admin \\<br />\n                -X POST \\<br />\n                -H \"Content-Type: application/json\" \\<br />\n                -d '&#123;\"query\": {props.query}, \"variables\": {props.variables}\n                ,\"operationName\":\"MyQuery\"&#125;' \\<br />\n                http://smart.dzynetech.com:4401/graphql\n              </code>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={closeModal}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"modal-backdrop fade show\"\n        id=\"backdrop\"\n        style={{ display: \"none\" }}\n      ></div>\n    </>\n  );\n}\n\nexport default CurlModal;\n","import { useQuery, useLazyQuery, gql } from \"@apollo/client\";\nimport React, { useState, useEffect } from \"react\";\nimport { print } from \"graphql/language/printer\";\n\nimport PermitsFilter from \"./PermitsFilter.js\";\nimport PermitRow from \"./PermitRow.js\";\nimport CurlModal from \"./CurlModal\";\nconst PERMITS_QUERY = gql`\n  query MyQuery(\n    $order: [PermitsOrderBy!]\n    $classification: ClassificationFilter\n    $min_sqft: Float\n    $min_cost: Float\n    $city: String\n    $street: String\n    $state: String\n    $zip: String\n  ) {\n    permits(\n      orderBy: $order\n      filter: {\n        and: {\n          imageUrl: { isNull: false }\n          sqft: { greaterThanOrEqualTo: $min_sqft }\n          cost: { greaterThanOrEqualTo: $min_cost }\n          classification: $classification\n          # sourceId\n          city: { includesInsensitive: $city }\n          street: { includesInsensitive: $street }\n          state: { includesInsensitive: $state }\n          zip: { includesInsensitive: $zip }\n          hasLocation: { equalTo: true }\n          and: {\n            or: [\n              { permitData: { includes: \"COMOTH\" } }\n              { permitData: { includes: \"COMRET\" } }\n              { permitData: { includes: \"Commercial\" } }\n              { permitData: { includes: \"New Construction\" } }\n              { permitData: { includes: \"NEWCON\" } }\n              { permitData: { includes: \"ERECT\" } }\n            ]\n          }\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          cost\n          city\n          sqft\n          state\n          street\n          streetNumber\n          source {\n            name\n          }\n          location {\n            x\n            y\n          }\n          zip\n          permitData\n          classification\n          notes\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nfunction Permits() {\n  const [filterVars, setFilterVars] = useState({});\n  const [getPermits, { loading, error, data }] = useLazyQuery(PERMITS_QUERY);\n\n  useEffect(() => {\n    getPermits({ variables: filterVars });\n    if (error) console.log(error);\n  }, [filterVars]);\n\n  function getJsonFile() {\n    var queryResponseJSON = JSON.stringify(data);\n    var d = new Blob([queryResponseJSON], { type: \"text/plain\" });\n    var url = window.URL.createObjectURL(d);\n    window.location.href = url;\n  }\n\n  return (\n    <>\n      <h1>Construction sites</h1>\n      <h3>Permits: 2017 - 2019</h3>\n      <PermitsFilter setFilterVars={setFilterVars} getJsonFile={getJsonFile} />\n      {data && <p>Filter returned {data.permits.totalCount} results</p>}\n      <CurlModal\n        query={JSON.stringify(print(PERMITS_QUERY))}\n        variables={JSON.stringify(filterVars)}\n      />\n\n      <div id=\"home\" style={{ minHeight: \"1000px\", position: \"relative\" }}>\n        {data &&\n          data.permits.edges.map((p) => (\n            <PermitRow key={p.node.id} permit={p.node} />\n          ))}\n      </div>\n\n      <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\n      <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\n    </>\n  );\n}\n\nexport default Permits;\n","import \"./App.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from \"@apollo/client\";\n\nimport Stats from \"./components/Stats.js\";\nimport Permits from \"./components/Permits.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:3000/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App container-fluid\">\n        <Router>\n          <Switch>\n            <Route path=\"/stats\">\n              <Stats />\n            </Route>\n            <Route path=\"/\">\n              <Permits />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}